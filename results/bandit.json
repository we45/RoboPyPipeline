{
  "errors": [],
  "generated_at": "2018-09-25T06:08:20Z",
  "metrics": {
    "/src/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0
    },
    "/src/app.py": {
      "CONFIDENCE.HIGH": 4,
      "CONFIDENCE.LOW": 1,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 285,
      "nosec": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 4,
      "CONFIDENCE.LOW": 1,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 285,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "145             password = content['password']\n146             hash_pass = hashlib.md5(password).hexdigest()\n147             new_user = User(username, hash_pass)\n",
      "filename": "/src/app.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
      "line_number": 146,
      "line_range": [
        146
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
      "test_id": "B303",
      "test_name": "blacklist"
    },
    {
      "code": "265                     print search_term\n266                     str_query = \"SELECT first_name, last_name, username FROM customer WHERE username = '%s';\" % search_term\n267                     # mycust = Customer.query.filter_by(username = search_term).first()\n",
      "filename": "/src/app.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 266,
      "line_range": [
        266
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "299         f = request.files['file']\n300         rand = random.randint(1, 100)\n301         fname = secure_filename(f.filename)\n",
      "filename": "/src/app.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 300,
      "line_range": [
        300
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "324         f = request.files['file']\n325         rand = random.randint(1, 100)\n326         fname = secure_filename(f.filename)\n",
      "filename": "/src/app.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 325,
      "line_range": [
        325
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "335 \n336         ydata = yaml.load(y)\n337 \n",
      "filename": "/src/app.py",
      "issue_confidence": "HIGH",
      "issue_severity": "MEDIUM",
      "issue_text": "Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().",
      "line_number": 336,
      "line_range": [
        336
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b506_yaml_load.html",
      "test_id": "B506",
      "test_name": "yaml_load"
    }
  ]
}